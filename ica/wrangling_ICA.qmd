```{r}
# Load tidyverse & data
library(tidyverse)
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")
```
```{r}
# Get a background map
library(socviz)
data(county_map)

# Make a choropleth map
library(RColorBrewer)  # For the color scale
library(ggthemes) # For theme_map
elections |> 
  mutate(county_fips = as.character(county_fips)) |> 
  mutate(county_fips = 
           ifelse(nchar(county_fips) == 4, paste0("0", county_fips), county_fips)) |> 
  ggplot(aes(map_id = county_fips, fill = cut(repub_pct_20, breaks = seq(0, 100, by = 10)))) +
    geom_map(map = county_map) +
    scale_fill_manual(values = rev(brewer.pal(10, "RdBu")), name = "% Republican") +
    expand_limits(x = county_map$long, y = county_map$lat)  + 
    theme_map() +
    theme(legend.position = "right") + 
    coord_
```

```{r}
# What's the first argument? The second?
select(elections, c(state_name, county_name, dem_pct_20, dem_pct_16))
```

```{r}
elections |> 
  select(state_name, county_name, dem_pct_20, dem_pct_16)
```

```{r}
# Store the results
mn <- elections |> 
  select(state_name, county_name, dem_pct_20, dem_pct_16) |> 
  filter(state_name == "Minnesota")

# Always check it out to confirm it's what you want it to be!
head(mn)
```

```{r}
elections_small <- elections|>
  select(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16)
  
head(elections_small)
```

```{r}
# Keep only data on counties in Hawaii
elections_small |>
 filter(state_name %in%c("Hawaii","Delaware"))
```

```{r}
elections_small |>
 filter(repub_pct_20 >c(93.97))
```

```{r}
elections_small |>
 filter(repub_pct_20 >=c(93.97))
```

```{r}
# Keep only data on counties in Texas where the Democrat got more than 65% of the vote in 2020
# Do this 2 ways.
# Method 1: 2 filters with 1 condition each
elections_small |>
 filter(state_name %in%c("Texas")) |>
 filter(dem_pct_20 >c(65))

# Method 2: 1 filter with 2 conditions
# elections_small |>
#  filter(___, ___)
```
